name: Update README with SQL Files

on:
  push:
    paths:
      - '**/*.sql'  # Trigger the action when any .sql file is added or modified

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Update README with SQL files
      run: |
        # Create the Python script that updates README
        echo "
import os

# Path to your project directory
project_directory = './'

# Path to the README file
readme_file = 'README.md'

# Function to generate the markdown table with .sql files
def generate_sql_file_table():
    table = '| **File Name** | \n| ------------- | \n'
    
    # Get all the .sql files in the project directory
    for file in os.listdir(project_directory):
        if file.endswith('.sql'):
            table += f'| [{file}]({file}) |\n'
    
    return table

# Function to update the README file
def update_readme():
    # Generate the new table with .sql file links
    new_table = generate_sql_file_table()
    
    # Read the current README file
    with open(readme_file, 'r') as f:
        content = f.read()
    
    # Find the section in the README where the table is located
    start_marker = '<!-- START SQL TABLE -->'
    end_marker = '<!-- END SQL TABLE -->'
    
    if start_marker in content and end_marker in content:
        # Replace the existing table with the new one
        content = content.replace(
            f'{start_marker}\n{content.split(start_marker)[1].split(end_marker)[0]}\n{end_marker}',

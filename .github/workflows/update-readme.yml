name: Update README with SQL Question Links

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 6 * * *"  # Runs daily at 6:00 AM UTC (midnight CST)

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to fetch all commits

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Update README File with SQL Links
        run: |
          python <<EOF
          import os
          import subprocess
          from datetime import datetime
          import pytz

          def get_sql_links(directory="sql_queries"):
              sql_links = []
              if not os.path.exists(directory):
                  print(f"Warning: Directory '{directory}' not found.")
                  return sql_links

              for filename in os.listdir(directory):
                  if filename.endswith(".sql"):
                      question_name = filename.replace(".sql", "").replace("_", " ").title()
                      link = f"https://github.com/${{ github.repository }}/blob/main/{directory}/{filename}"
                      file_path = os.path.join(directory, filename)

                      try:
                          result = subprocess.run(["git", "log", "--format=%cd", "--date=short", "--diff-filter=A", "--", file_path], capture_output=True, text=True, check=True)
                          commit_date = result.stdout.strip().split("\\n")[0]
                      except subprocess.CalledProcessError as e:
                          print(f"Error getting commit date for {filename}: {e}")
                          commit_date = "Unknown"

                      sql_links.append((question_name, link, commit_date))

              sql_links.sort(key=lambda x: (x[2], x[0]), reverse=True)
              return sql_links

          def update_readme(sql_links):
              cst = pytz.timezone('US/Central')
              now_cst = datetime.now(cst).strftime("%Y-%m-%d %H:%M:%S %Z%z")

              with open("README.md", "w") as f:
                  f.write(f"Last updated on: {now_cst}\\n\\n")
                  f.write("## SQL Question Answers\\n\\n")
                  if sql_links:
                      f.write("| Question | Answer Link | Date Added |\n")
                      f.write("| -------- | ----------- | ---------- |\n")
                      for question, link, commit_date in sql_links:
                          f.write(f"| {question} | [{question}]({link}) | {commit_date} |\n")
                  else:
                      f.write("No SQL questions found in the sql_queries folder.\\n")

          sql_links = get_sql_links()
          update_readme(sql_links)
          EOF

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md
          git commit -m "Updated README with SQL question links and commit dates" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
